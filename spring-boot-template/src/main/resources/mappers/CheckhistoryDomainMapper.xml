<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nhfc99.template.dao.CheckhistoryDomainMapper" >
  <resultMap id="BaseResultMap" type="com.nhfc99.template.domain.CheckhistoryDomain" >
    <constructor >
      <idArg column="Id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="CreateDate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="CreateUserId" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="CreateUserName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="LastEditDate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="CheckType" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="CheckInfId" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="CheckBeforeStatus" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="CheckAfterStatus" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="CheckDescribe" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="BackMemo" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    Id, CreateDate, CreateUserId, CreateUserName, LastEditDate, CheckType, CheckInfId, 
    CheckBeforeStatus, CheckAfterStatus, CheckDescribe, BackMemo
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from checkhistory
    where Id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from checkhistory
    where Id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.nhfc99.template.domain.CheckhistoryDomain" >
    insert into checkhistory (Id, CreateDate, CreateUserId, 
      CreateUserName, LastEditDate, CheckType, 
      CheckInfId, CheckBeforeStatus, CheckAfterStatus, 
      CheckDescribe, BackMemo)
    values (#{id,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, 
      #{createUserName,jdbcType=VARCHAR}, #{lastEditDate,jdbcType=TIMESTAMP}, #{checkType,jdbcType=INTEGER}, 
      #{checkInfId,jdbcType=VARCHAR}, #{checkBeforeStatus,jdbcType=INTEGER}, #{checkAfterStatus,jdbcType=INTEGER}, 
      #{checkDescribe,jdbcType=VARCHAR}, #{backMemo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nhfc99.template.domain.CheckhistoryDomain" >
    insert into checkhistory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="createDate != null" >
        CreateDate,
      </if>
      <if test="createUserId != null" >
        CreateUserId,
      </if>
      <if test="createUserName != null" >
        CreateUserName,
      </if>
      <if test="lastEditDate != null" >
        LastEditDate,
      </if>
      <if test="checkType != null" >
        CheckType,
      </if>
      <if test="checkInfId != null" >
        CheckInfId,
      </if>
      <if test="checkBeforeStatus != null" >
        CheckBeforeStatus,
      </if>
      <if test="checkAfterStatus != null" >
        CheckAfterStatus,
      </if>
      <if test="checkDescribe != null" >
        CheckDescribe,
      </if>
      <if test="backMemo != null" >
        BackMemo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="lastEditDate != null" >
        #{lastEditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="checkType != null" >
        #{checkType,jdbcType=INTEGER},
      </if>
      <if test="checkInfId != null" >
        #{checkInfId,jdbcType=VARCHAR},
      </if>
      <if test="checkBeforeStatus != null" >
        #{checkBeforeStatus,jdbcType=INTEGER},
      </if>
      <if test="checkAfterStatus != null" >
        #{checkAfterStatus,jdbcType=INTEGER},
      </if>
      <if test="checkDescribe != null" >
        #{checkDescribe,jdbcType=VARCHAR},
      </if>
      <if test="backMemo != null" >
        #{backMemo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nhfc99.template.domain.CheckhistoryDomain" >
    update checkhistory
    <set >
      <if test="createDate != null" >
        CreateDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        CreateUserId = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null" >
        CreateUserName = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="lastEditDate != null" >
        LastEditDate = #{lastEditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="checkType != null" >
        CheckType = #{checkType,jdbcType=INTEGER},
      </if>
      <if test="checkInfId != null" >
        CheckInfId = #{checkInfId,jdbcType=VARCHAR},
      </if>
      <if test="checkBeforeStatus != null" >
        CheckBeforeStatus = #{checkBeforeStatus,jdbcType=INTEGER},
      </if>
      <if test="checkAfterStatus != null" >
        CheckAfterStatus = #{checkAfterStatus,jdbcType=INTEGER},
      </if>
      <if test="checkDescribe != null" >
        CheckDescribe = #{checkDescribe,jdbcType=VARCHAR},
      </if>
      <if test="backMemo != null" >
        BackMemo = #{backMemo,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nhfc99.template.domain.CheckhistoryDomain" >
    update checkhistory
    set CreateDate = #{createDate,jdbcType=TIMESTAMP},
      CreateUserId = #{createUserId,jdbcType=VARCHAR},
      CreateUserName = #{createUserName,jdbcType=VARCHAR},
      LastEditDate = #{lastEditDate,jdbcType=TIMESTAMP},
      CheckType = #{checkType,jdbcType=INTEGER},
      CheckInfId = #{checkInfId,jdbcType=VARCHAR},
      CheckBeforeStatus = #{checkBeforeStatus,jdbcType=INTEGER},
      CheckAfterStatus = #{checkAfterStatus,jdbcType=INTEGER},
      CheckDescribe = #{checkDescribe,jdbcType=VARCHAR},
      BackMemo = #{backMemo,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>