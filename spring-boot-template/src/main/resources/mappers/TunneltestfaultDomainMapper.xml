<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nhfc99.template.dao.TunneltestfaultDomainMapper">
    <resultMap id="BaseResultMap" type="com.nhfc99.template.domain.TunneltestfaultDomain">
        <constructor>
            <idArg column="Id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="CreateDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="CreateUserId" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="CreateUserName" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="LastEditDate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="ProjectInfoId" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="TunnelInfoId" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="TunnelTestReportId" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="StartKilometre" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="StartMetre" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="EndKilometre" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="EndMetre" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="FaultLength" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="FaultType" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="FaultSite" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="DesignAmount" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="ActualAmount" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="BackMemo" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="IsFault" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="IsFix" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="TunnelFixReportId" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="FaultLevel" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="IsSendMsg" jdbcType="BIT" javaType="java.lang.Boolean"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    Id, CreateDate, CreateUserId, CreateUserName, LastEditDate, ProjectInfoId, TunnelInfoId, 
    TunnelTestReportId, StartKilometre, StartMetre, EndKilometre, EndMetre, FaultLength, 
    FaultType, FaultSite, DesignAmount, ActualAmount, BackMemo, IsFault, IsFix, TunnelFixReportId, 
    FaultLevel, IsSendMsg
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from tunneltestfault
        where Id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="selectAllByTunnelInfoId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tunneltestfault
        where TunnelInfoId IN
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="selectByProjectName" resultType="com.nhfc99.template.domain.HomeQualityStatisticsAllAreaDomain"
            parameterType="java.lang.String">

        SELECT tunneltestfault.*,
        tunneltestlinedetail.TestLineLength AS TestLineLength,
        tunnelinfo.FixCrackLength AS FixCrackLength,
        tunnelinfo.TunnelLength AS TunnelLength
        from tunneltestfault
        LEFT JOIN tunneltestlinedetail ON tunneltestlinedetail.TunnelInfoId = tunneltestfault.TunnelInfoId
        LEFT JOIN tunnelinfo ON tunnelinfo.Id = tunneltestfault.TunnelInfoId
        WHERE tunneltestfault.TunnelInfoId IN (
        SELECT tunnelinfo.Id from tunnelinfo LEFT JOIN projectinfo ON tunnelinfo.ProjectInfoId = projectinfo.Id
        WHERE
        projectinfo.ProjectName = #{projectName,jdbcType=VARCHAR}
        )

    </select>

    <select id="selectByTunnelName" resultType="com.nhfc99.template.domain.HomeQualityStatisticsAllAreaDomain"
            parameterType="java.lang.String">

        SELECT tunneltestfault.*,tunneltestlinedetail.TestLineLength AS TestLineLength,
        tunnelinfo.FixCrackLength AS FixCrackLength,tunnelinfo.TunnelLength AS TunnelLength
        from tunneltestfault
        LEFT JOIN tunneltestlinedetail ON tunneltestlinedetail.TunnelInfoId = tunneltestfault.TunnelInfoId
        LEFT JOIN tunnelinfo ON tunnelinfo.Id = tunneltestfault.TunnelInfoId
        WHERE tunneltestfault.TunnelInfoId IN (
		    SELECT Id from tunnelinfo WHERE tunnelinfo.TunnelName=#{tunnelName,jdbcType=VARCHAR}
        )

    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tunneltestfault
    where Id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.nhfc99.template.domain.TunneltestfaultDomain">
    insert into tunneltestfault (Id, CreateDate, CreateUserId, 
      CreateUserName, LastEditDate, ProjectInfoId, 
      TunnelInfoId, TunnelTestReportId, StartKilometre, 
      StartMetre, EndKilometre, EndMetre, 
      FaultLength, FaultType, FaultSite, 
      DesignAmount, ActualAmount, BackMemo, 
      IsFault, IsFix, TunnelFixReportId, 
      FaultLevel, IsSendMsg)
    values (#{id,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, 
      #{createUserName,jdbcType=VARCHAR}, #{lastEditDate,jdbcType=TIMESTAMP}, #{projectInfoId,jdbcType=VARCHAR}, 
      #{tunnelInfoId,jdbcType=VARCHAR}, #{tunnelTestReportId,jdbcType=VARCHAR}, #{startKilometre,jdbcType=INTEGER}, 
      #{startMetre,jdbcType=DECIMAL}, #{endKilometre,jdbcType=INTEGER}, #{endMetre,jdbcType=DECIMAL}, 
      #{faultLength,jdbcType=DECIMAL}, #{faultType,jdbcType=VARCHAR}, #{faultSite,jdbcType=VARCHAR}, 
      #{designAmount,jdbcType=VARCHAR}, #{actualAmount,jdbcType=VARCHAR}, #{backMemo,jdbcType=VARCHAR}, 
      #{isFault,jdbcType=BIT}, #{isFix,jdbcType=BIT}, #{tunnelFixReportId,jdbcType=VARCHAR}, 
      #{faultLevel,jdbcType=INTEGER}, #{isSendMsg,jdbcType=BIT})
  </insert>
    <insert id="insertSelective" parameterType="com.nhfc99.template.domain.TunneltestfaultDomain">
        insert into tunneltestfault
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                Id,
            </if>
            <if test="createDate != null">
                CreateDate,
            </if>
            <if test="createUserId != null">
                CreateUserId,
            </if>
            <if test="createUserName != null">
                CreateUserName,
            </if>
            <if test="lastEditDate != null">
                LastEditDate,
            </if>
            <if test="projectInfoId != null">
                ProjectInfoId,
            </if>
            <if test="tunnelInfoId != null">
                TunnelInfoId,
            </if>
            <if test="tunnelTestReportId != null">
                TunnelTestReportId,
            </if>
            <if test="startKilometre != null">
                StartKilometre,
            </if>
            <if test="startMetre != null">
                StartMetre,
            </if>
            <if test="endKilometre != null">
                EndKilometre,
            </if>
            <if test="endMetre != null">
                EndMetre,
            </if>
            <if test="faultLength != null">
                FaultLength,
            </if>
            <if test="faultType != null">
                FaultType,
            </if>
            <if test="faultSite != null">
                FaultSite,
            </if>
            <if test="designAmount != null">
                DesignAmount,
            </if>
            <if test="actualAmount != null">
                ActualAmount,
            </if>
            <if test="backMemo != null">
                BackMemo,
            </if>
            <if test="isFault != null">
                IsFault,
            </if>
            <if test="isFix != null">
                IsFix,
            </if>
            <if test="tunnelFixReportId != null">
                TunnelFixReportId,
            </if>
            <if test="faultLevel != null">
                FaultLevel,
            </if>
            <if test="isSendMsg != null">
                IsSendMsg,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="createUserName != null">
                #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="lastEditDate != null">
                #{lastEditDate,jdbcType=TIMESTAMP},
            </if>
            <if test="projectInfoId != null">
                #{projectInfoId,jdbcType=VARCHAR},
            </if>
            <if test="tunnelInfoId != null">
                #{tunnelInfoId,jdbcType=VARCHAR},
            </if>
            <if test="tunnelTestReportId != null">
                #{tunnelTestReportId,jdbcType=VARCHAR},
            </if>
            <if test="startKilometre != null">
                #{startKilometre,jdbcType=INTEGER},
            </if>
            <if test="startMetre != null">
                #{startMetre,jdbcType=DECIMAL},
            </if>
            <if test="endKilometre != null">
                #{endKilometre,jdbcType=INTEGER},
            </if>
            <if test="endMetre != null">
                #{endMetre,jdbcType=DECIMAL},
            </if>
            <if test="faultLength != null">
                #{faultLength,jdbcType=DECIMAL},
            </if>
            <if test="faultType != null">
                #{faultType,jdbcType=VARCHAR},
            </if>
            <if test="faultSite != null">
                #{faultSite,jdbcType=VARCHAR},
            </if>
            <if test="designAmount != null">
                #{designAmount,jdbcType=VARCHAR},
            </if>
            <if test="actualAmount != null">
                #{actualAmount,jdbcType=VARCHAR},
            </if>
            <if test="backMemo != null">
                #{backMemo,jdbcType=VARCHAR},
            </if>
            <if test="isFault != null">
                #{isFault,jdbcType=BIT},
            </if>
            <if test="isFix != null">
                #{isFix,jdbcType=BIT},
            </if>
            <if test="tunnelFixReportId != null">
                #{tunnelFixReportId,jdbcType=VARCHAR},
            </if>
            <if test="faultLevel != null">
                #{faultLevel,jdbcType=INTEGER},
            </if>
            <if test="isSendMsg != null">
                #{isSendMsg,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.nhfc99.template.domain.TunneltestfaultDomain">
        update tunneltestfault
        <set>
            <if test="createDate != null">
                CreateDate = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                CreateUserId = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="createUserName != null">
                CreateUserName = #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="lastEditDate != null">
                LastEditDate = #{lastEditDate,jdbcType=TIMESTAMP},
            </if>
            <if test="projectInfoId != null">
                ProjectInfoId = #{projectInfoId,jdbcType=VARCHAR},
            </if>
            <if test="tunnelInfoId != null">
                TunnelInfoId = #{tunnelInfoId,jdbcType=VARCHAR},
            </if>
            <if test="tunnelTestReportId != null">
                TunnelTestReportId = #{tunnelTestReportId,jdbcType=VARCHAR},
            </if>
            <if test="startKilometre != null">
                StartKilometre = #{startKilometre,jdbcType=INTEGER},
            </if>
            <if test="startMetre != null">
                StartMetre = #{startMetre,jdbcType=DECIMAL},
            </if>
            <if test="endKilometre != null">
                EndKilometre = #{endKilometre,jdbcType=INTEGER},
            </if>
            <if test="endMetre != null">
                EndMetre = #{endMetre,jdbcType=DECIMAL},
            </if>
            <if test="faultLength != null">
                FaultLength = #{faultLength,jdbcType=DECIMAL},
            </if>
            <if test="faultType != null">
                FaultType = #{faultType,jdbcType=VARCHAR},
            </if>
            <if test="faultSite != null">
                FaultSite = #{faultSite,jdbcType=VARCHAR},
            </if>
            <if test="designAmount != null">
                DesignAmount = #{designAmount,jdbcType=VARCHAR},
            </if>
            <if test="actualAmount != null">
                ActualAmount = #{actualAmount,jdbcType=VARCHAR},
            </if>
            <if test="backMemo != null">
                BackMemo = #{backMemo,jdbcType=VARCHAR},
            </if>
            <if test="isFault != null">
                IsFault = #{isFault,jdbcType=BIT},
            </if>
            <if test="isFix != null">
                IsFix = #{isFix,jdbcType=BIT},
            </if>
            <if test="tunnelFixReportId != null">
                TunnelFixReportId = #{tunnelFixReportId,jdbcType=VARCHAR},
            </if>
            <if test="faultLevel != null">
                FaultLevel = #{faultLevel,jdbcType=INTEGER},
            </if>
            <if test="isSendMsg != null">
                IsSendMsg = #{isSendMsg,jdbcType=BIT},
            </if>
        </set>
        where Id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.nhfc99.template.domain.TunneltestfaultDomain">
    update tunneltestfault
    set CreateDate = #{createDate,jdbcType=TIMESTAMP},
      CreateUserId = #{createUserId,jdbcType=VARCHAR},
      CreateUserName = #{createUserName,jdbcType=VARCHAR},
      LastEditDate = #{lastEditDate,jdbcType=TIMESTAMP},
      ProjectInfoId = #{projectInfoId,jdbcType=VARCHAR},
      TunnelInfoId = #{tunnelInfoId,jdbcType=VARCHAR},
      TunnelTestReportId = #{tunnelTestReportId,jdbcType=VARCHAR},
      StartKilometre = #{startKilometre,jdbcType=INTEGER},
      StartMetre = #{startMetre,jdbcType=DECIMAL},
      EndKilometre = #{endKilometre,jdbcType=INTEGER},
      EndMetre = #{endMetre,jdbcType=DECIMAL},
      FaultLength = #{faultLength,jdbcType=DECIMAL},
      FaultType = #{faultType,jdbcType=VARCHAR},
      FaultSite = #{faultSite,jdbcType=VARCHAR},
      DesignAmount = #{designAmount,jdbcType=VARCHAR},
      ActualAmount = #{actualAmount,jdbcType=VARCHAR},
      BackMemo = #{backMemo,jdbcType=VARCHAR},
      IsFault = #{isFault,jdbcType=BIT},
      IsFix = #{isFix,jdbcType=BIT},
      TunnelFixReportId = #{tunnelFixReportId,jdbcType=VARCHAR},
      FaultLevel = #{faultLevel,jdbcType=INTEGER},
      IsSendMsg = #{isSendMsg,jdbcType=BIT}
    where Id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>